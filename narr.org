

* Documentation

[[http://nomads.ncdc.noaa.gov/docs/ncdc-narrdsi-6175-final.pdf][National Climatic Data Center Data Documentation]]

* Idenitfy which files we need

Some files on the [[ftp://nomads.ncdc.noaa.gov/NARR/][NARR section of the NOMADS FTP server]] appear to be
redundant so do a checksum comparison to be sure that there is no
difference.

#+begin_src sh :results output verbatim :session *shell* :cache yes
  wget --timestamping --force-directories --no-host-directories --directory-prefix data --cut-dirs=2 --no-verbose \
      http://nomads.ncdc.noaa.gov/data/narr/197901/19790101/narr-a_221_19790101_0000_000.grb
  wget --timestamping --force-directories --no-host-directories --directory-prefix data --cut-dirs=2 --no-verbose \
      http://nomads.ncdc.noaa.gov/data/narr/197901/197901/narr-a_221_19790101_0000_000.grb
#+end_src

#+RESULTS[d87f219f1d8606b95ad980e6ca8464caae0d5172]:
: 
: 2012-11-15 13:05:30 URL:http://nomads.ncdc.noaa.gov/data/narr/197901/19790101/narr-a_221_19790101_0000_000.grb [56399426/56399426] -> "data/197901/19790101/narr-a_221_19790101_0000_000.grb" [1]
: > 2012-11-15 13:05:42 URL:http://nomads.ncdc.noaa.gov/data/narr/197901/197901/narr-a_221_19790101_0000_000.grb [56399426/56399426] -> "data/197901/197901/narr-a_221_19790101_0000_000.grb" [1]

#+BEGIN_SRC sh :results output verbatim :session *shell*
  find data -name narr-a_221_19790101_0000_000.grb -exec md5sum \{\} \;
#+END_SRC

#+RESULTS:
: 3551e6ff8bf9896f1fbabf37a2613f54  data/197901/197901/narr-a_221_19790101_0000_000.grb
: 3551e6ff8bf9896f1fbabf37a2613f54  data/197901/19790101/narr-a_221_19790101_0000_000.grb

Now we can be reasonably sure that it doesn't matter what directory we take the data from.


* Download the data

** COMMENT The old way

Compose the URLs.

#+BEGIN_SRC R :session *R* :results silent
  baseUrl <- "ftp://nomads.ncdc.noaa.gov/NARR"
  
  narrMonths <-
    seq(
      as.Date( "1979-01-01"),
      as.Date( "2012-11-01"),
      by= "month")
  
  urls <- paste(
    baseUrl,
    format( narrMonths, "%Y%m"),
    format( narrMonths, "%Y%m"),
    sep= "/")
#+END_SRC

Examine a sample of the resulting URLs.

#+BEGIN_SRC R :session *R*
  head( urls)
#+END_SRC

#+RESULTS:
| ftp://nomads.ncdc.noaa.gov/NARR/197901/197901 |
| ftp://nomads.ncdc.noaa.gov/NARR/197902/197902 |
| ftp://nomads.ncdc.noaa.gov/NARR/197903/197903 |
| ftp://nomads.ncdc.noaa.gov/NARR/197904/197904 |
| ftp://nomads.ncdc.noaa.gov/NARR/197905/197905 |
| ftp://nomads.ncdc.noaa.gov/NARR/197906/197906 |

Write the URLs to a file for wget to read.

#+BEGIN_SRC R :session *R* :results silent
  cat( urls, file= "urls", sep= "\n")  
#+END_SRC

Files since 201208 do not have monthly subfolders.

#+BEGIN_SRC R :session *R* :results silent
  
  narrDays <-
    seq(
      as.Date( "2012-11-30"),
      as.Date( "2012-12-08"),
      by= "day")
  
  urls <- paste(
    baseUrl,
    format( narrDays, "%Y%m"),
    format( narrDays, "%Y%m%d"),
    sep= "/")
#+END_SRC

Examine a sample of the resulting URLs.

#+BEGIN_SRC R :session *R*
  urls
#+END_SRC

#+RESULTS:
| ftp://nomads.ncdc.noaa.gov/NARR/201211/20121130 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121201 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121202 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121203 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121204 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121205 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121206 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121207 |
| ftp://nomads.ncdc.noaa.gov/NARR/201212/20121208 |

Write the URLs to a file for wget to read.

#+BEGIN_SRC R :session *R* :results silent
  cat(
    urls, file= "urls",
    sep= "\n", append= FALSE)  
#+END_SRC


#+BEGIN_SRC sh
  screen -d -m -S narr
  screen -S narr -X zombie ko
  screen -S narr -X screen \
      wget  --no-verbose --recursive --no-clobber --retr-symlinks \
      --force-directories --no-host-directories --directory-prefix /project/joshuaelliott/narr/data/grb --cut-dirs=2 \
      --input-file=/project/joshuaelliott/narr/urls --accept "narr-a*.grb"
#+END_SRC

#+RESULTS:

After 201208 there are no monthly folders on the server so we have to
move some files around to get a uniform directory structure.

#+BEGIN_SRC sh
  mkdir -v data/grb/2012{09,10,11,12}
  find data/grb -regex 'data/grb/2012\(09\|1[012]\)../.*?grb$' > dailyDirs.txt
  perl -ne 'chomp; m#^(data/grb/2012..)#; print "mv $_ $1\n";' dailyDirs.txt | bash
  find data/grb -type d -empty -delete
  rm dailyDirs.txt 
#+END_SRC

Make a list of all .grb input files for Swift initialization.

#+BEGIN_SRC sh :results silent
find data/grb -type f -name *.grb | sort > grbFiles.txt
#+END_SRC

#+BEGIN_SRC sh :results silent :eval no
find data/grb/20121{1,2} -type f -name *.grb | sort > grbFiles.txt
#+END_SRC


** Now schedule a download and cleanup daily


#+BEGIN_SRC R :tangle scripts/downloadAndDeleteGrbs.R :shebang #!/software/R-2.15-el6-x86_64/bin/Rscript
  library( doMC, quietly= TRUE)
  registerDoMC()
  
  ## library( RCurl, quietly= TRUE)
  library( stringr, quietly= TRUE)
  
  
  existingGrbFiles <-
    list.files(
      "data/grb",
      full.names= TRUE,
      recursive= TRUE)
  
  grbDateTimeRegex <-
    paste(
      "^data/grb/([0-9]{4})([0-9]{2})/[0-9]{8}",
      "narr-a_221_[0-9]{6}([0-9]{2})_([0-9]{2})00_000.grb$",
      sep= "/")
  
  nextGrbDateTime <- 
    if( length( existingGrbFiles) == 0 &&
       !file.exists( "data/nextGrbToProcess")) {
      ISOdatetime( 1979, 1, 1, 0, 0, 0, "GMT")
    } else {
      nextGrbToProcess <-
        readLines( "data/nextGrbToProcess", n=1)
      nextGrbDateTime <-
        as.list( as.numeric( str_match_all(
          nextGrbToProcess,
          grbDateTimeRegex)[[1]][1, -1]))
      names( nextGrbDateTime) <-
        c( "year", "month", "day", "hour")
      do.call(
        ISOdatetime,
        append(
          nextGrbDateTime,
          list(min= 0, sec= 0, tz= "GMT")))
    }
  
  
  grbsToDelete <-
    existingGrbFiles[ existingGrbFiles < nextGrbToProcess]
  
  if( length( grbsToDelete) > 0) {
    grbsDeleted <- 
      foreach( fn=filesToDelete, .combine= c) %dopar% {
        if( file.remove( fn)) fn else NA
      }
    cat( "GRB files deleted:\n")
    cat( grbsDeleted[ !is.na( grbsDeleted)],
        sep= "\n")
  }
  
  grbUrlFormat <-
    paste( "ftp://nomads.ncdc.noaa.gov/NARR",
          "%Y%m/%Y%m%d/narr-a_221_%Y%m%d_%H00_000.grb",
          sep= "/")
  
  pendingGrbUrls <-
    strftime(
      seq( from= nextGrbDateTime,
          to= Sys.time(),
          by= "3 hours"),
      tz= "GMT",
      format= grbUrlFormat)
  
  pendingGrbFiles <-
    str_replace(
      string= pendingGrbUrls,
      pattern= "^ftp://nomads.ncdc.noaa.gov/NARR",
      replacement= "data/grb")
  
  cat( pendingGrbFiles, file="data/pendingGrbFiles", sep= "\n")
  
  grbToDownloadUrls <-
    pendingGrbUrls[ !pendingGrbFiles %in% existingGrbFiles]
  
  grbToDownloadDests <- 
    pendingGrbFiles[ !pendingGrbFiles %in% existingGrbFiles]
  
  options( cores= 5, internet.info= 0)
  
  noClobber <- TRUE
  
  log <- foreach(
    u= grbToDownloadUrls,
    d= grbToDownloadDests,
    .combine= c) %dopar%
  {
    dir.create( dirname( d), recursive= TRUE)
    if( file.exists( d) && noClobber) {
      sprintf( "%s *EXISTS*", d)
    } else {
      ## if( !url.exists( u)) {
      ##   sprintf( "%s *NOT AVAILABLE*", d)
      ## } else {
      t <- try(
        download.file(
          url= u,
          destfile= d,
          ## method= "wget",
          ## extra= "--no-verbose --retry-connrefused",
          mode= "wb",
          cacheOK= FALSE,
          quiet= FALSE),
        silent= TRUE)
      ##   quiet= TRUE),
      ## silent= TRUE)
      if( inherits( t, "try-error") ||  t != 0) {
        file.remove( d)
        sprintf( "%s *FAILED* %s", d, t)
      } else {
        sprintf( "%s", d)
      }
    }
  }
  
  cat( log, sep= "\n")
  warnings()
#+END_SRC

*** TODO make :shebang of source block dynamic using elisp

* Identify the variables of interest

#+NAME:variables
#+BEGIN_SRC sh :results output raw
  echo "|band|name|height|description|"
  echo "|-"
  wgrib -s data/grb/197901/narr-a_221_19790101_0000_000.grb \
      | egrep ':(TMP:2 m|APCP:|CRAIN:|DSWRF:)' \
      | cut -d: -f 1,4,5,6 | perl -pe 's/: ?/|/g; s/^/|/; s/$/|/'
  
#+END_SRC

#+RESULTS: variables
| band | name  | height        | description |
|------+-------+---------------+-------------|
|  288 | TMP   | 2 m above gnd | anl         |
|  380 | APCP  | sfc           | 0-3hr acc   |
|  389 | CRAIN | sfc           | 3hr fcst    |
|  406 | DSWRF | sfc           | 0-3hr ave   |


* Perform the transformation manually to get it right

** Convert to GRIB2 format

#+BEGIN_SRC sh :dir /midway:/project/joshuaelliott/narr
  mkdir -p data/grb2/197901
  for hour in 00 03 06 09 12 15 18 21; do
        cnvgrib -g12 -nv \
            data/grb/197901/narr-a_221_19790101_${hour}00_000.grb \
            data/grb2/197901/narr-a_221_19790101_${hour}00_000.grb2
  done  
#+END_SRC

#+RESULTS:

** Extract the variables of interest

#+BEGIN_SRC sh :results silent :dir /midway:/project/joshuaelliott/narr
  mkdir -p data/nc/197901
  for hour in 00 03 06 09 12 15 18 21; do
      wgrib2 data/grb2/197901/narr-a_221_19790101_${hour}00_000.grb2 \
          -match ':(TMP:2 m|APCP:|CRAIN:|DSWRF:)' \
          -new_grid_winds earth -new_grid_interpolation neighbor \
          -new_grid latlon 220.041666666666:960:0.083333333333 20.041666666666:480:0.0833333333333 - \
          | wgrib2 - -order we:sn -nc3 -nc_table nc_table \
          -netcdf data/nc/197901/narr-a_221_19790101_${hour}00_000.nc
  done
  
#+END_SRC

Can use '-set_ext_name 0' instead of -nc_table.

** Get rid of the empty second time step added by wgrib2

#+BEGIN_SRC sh :session *ssh-midway*
  cdo seltimestep,1 \
      data/nc/197901/narr-a_221_19790101_0000_000.nc \
      data/nc/197901/narr-a_221_19790101_0000_000.single.nc
#+END_SRC

** Merge and aggregate

*** Merge into an annual file

#+BEGIN_SRC sh :session *shell* :results output verbatim
  cdo -O mergetime \
      $(find data/nc/1979* -type f -name narr-a_221_*00_000.single.nc) \
      data/nc/annual/1979.nc
#+END_SRC

#+RESULTS:
: 
: > cdo mergetime: Processed 5382144000 values from 11680 variables over 2920 timesteps ( 127.04s )

Do the same through SLURM.

#+BEGIN_SRC sh :session *shell* :results output verbatim
  srun --partition=westmere --immediate=3600 cdo -O mergetime \
      $(find data/nc/1980* -type f -name narr-a_221_*00_000.single.nc) \
      data/nc/annual/1980.nc
#+END_SRC

#+BEGIN_SRC sh :session *shell* :results output verbatim
  for year in {1981..2012}; do
      srun --partition=westmere --immediate=3600 cdo mergetime \
          $(find data/nc/${year}* -type f -name narr-a_221_*00_000.single.nc) \
          data/nc/annual/${year}.nc &
  done
#+END_SRC

#+RESULTS:
#+begin_example

> > > [2] 7186
[3] 7187
[4] 7188
[5] 7190
[6] 7192
[7] 7194
[8] 7196
[9] 7198
[10] 7200
[11] 7202
[12] 7204
[13] 7206
[14] 7208
[15] 7210
[16] 7212
[17] 7214
[18] 7215
[19] 7218
[20] 7220
[21] 7222
[22] 7224
[23] 7226
[24] 7228
[25] 7230
[26] 7231
[27] 7234
[28] 7238
[29] 7240
[30] 7242
[31] 7244
[32] 7246
[33] 7248
#+end_example


*** Aggregate

#+BEGIN_SRC sh :session *ssh-midway* :results output verbatim
  cdo daymin -selname,TMP data/nc/197901.nc data/nc/197901_tmin.nc
  cdo daymax -selname,TMP data/nc/197901.nc data/nc/197901_tmax.nc
  cdo daysum -selname,APCP data/nc/197901.nc data/nc/197901_precip.nc
  cdo daymean -selname,DSWRF data/nc/197901.nc data/nc/197901_solar.nc
#+END_SRC

#+RESULTS:
#+begin_example
cdo daymin: Started child process "selname,TMP data/nc/197901.nc (pipe1.1)".
cdo(2) selname: Processed 114278400 values from 4 variables over 248 timesteps ( 2.86s )
cdo daymin: Processed 114278400 values from 1 variable over 248 timesteps ( 2.86s )
cdo daymax: Started child process "selname,TMP data/nc/197901.nc (pipe1.1)".
cdo(2) selname: Processed 114278400 values from 4 variables over 248 timesteps ( 2.96s )
cdo daymax: Processed 114278400 values from 1 variable over 248 timesteps ( 2.96s )
cdo daysum: Started child process "selname,APCP data/nc/197901.nc (pipe1.1)".
cdo(2) selname: Processed 114278400 values from 4 variables over 248 timesteps ( 4.83s )
cdo daysum: Processed 114278400 values from 1 variable over 248 timesteps ( 4.83s )
cdo daymean: Started child process "selname,DSWRF data/nc/197901.nc (pipe1.1)".
cdo(2) selname: Processed 114278400 values from 4 variables over 248 timesteps ( 5.12s )
cdo daymean: Processed 114278400 values from 1 variable over 248 timesteps ( 5.12s )
#+end_example


** Testing remote execution

#+BEGIN_SRC sh :dir /midway:~
echo "Executed by `whoami` on `hostname` in `pwd`"
#+END_SRC

#+RESULTS:
: Executed by nbest on lep in /Users/nbest

#+BEGIN_SRC sh :session *ssh-midway*
echo "Executed by `whoami` on `hostname` in `pwd`"
#+END_SRC

#+RESULTS:
: Executed by nbest on midway-login1 in /project/joshuaelliott/narr


#+BEGIN_SRC sh :session *shell* :results output verbatim
echo "Executed by `whoami` on `hostname` in `pwd`"
module list 2>&1
which cdo
#+END_SRC


#+RESULTS:
#+begin_example
Executed by nbest on midway-login1 in /project/joshuaelliott/narr
Currently Loaded Modulefiles:
 1) slurm/2.4      
 2) vim/7.3        
 3) subversion/1.6 
 4) env/rcc        
 5) git/1.7        
 6) R/2.15         
 7) hdf5/1.8       
 8) netcdf/4.2     
 9) postgresql/9.2 
10) proj/4.8       
11) gdal/1.9       
12) jasper/1.900   
13) cnvgrib/1.4    
14) wgrib2/0.1     
15) texinfo/4.13a  
16) texlive/2012   
17) grib_api/1.9   
18) cdo/1.5        
19) java/1.7       
20) emacs/23.4
/software/cdo-1.5-el6-x86_64/bin/cdo
#+end_example

#+BEGIN_SRC sh :results output verbatim
echo "Executed by `whoami` on `hostname` in `pwd`"
module list 2>&1
which cdo
#+END_SRC

#+RESULTS:

** Processing errors

Running the stage that copies the first time step of the wgrib2
output to the *.single.nc files produced 22 errors.  

#+NAME: swiftErrors
#+BEGIN_EXAMPLE
1. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050523_0000_000.nc, data/nc/200505/narr-a_221_20050523_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/7/cdo-7cieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050523_0000_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050523_0000_000.single.nc
2. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200509/narr-a_221_20050922_2100_000.nc, data/nc/200509/narr-a_221_20050922_2100_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/k/cdo-k37eex1l
Caused by:
        File not found: /project/joshuaelliott/narr/./data/nc/200509/narr-a_221_20050922_2100_000.nc
3. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200605/narr-a_221_20060503_0000_000.nc, data/nc/200605/narr-a_221_20060503_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/a/cdo-a3aeex1l
Caused by:
        File not found: /project/joshuaelliott/narr/./data/nc/200605/narr-a_221_20060503_0000_000.nc
4. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200403/narr-a_221_20040326_0000_000.nc, data/nc/200403/narr-a_221_20040326_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/i/cdo-irceex1l
Caused by:
        File not found: /project/joshuaelliott/narr/./data/nc/200403/narr-a_221_20040326_0000_000.nc
5. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050524_0900_000.nc, data/nc/200505/narr-a_221_20050524_0900_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/m/cdo-mfieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050524_0900_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050524_0900_000.single.nc
6. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050527_0300_000.nc, data/nc/200505/narr-a_221_20050527_0300_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/7/cdo-7eieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050527_0300_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050527_0300_000.single.nc
7. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050610_1200_000.nc, data/nc/200506/narr-a_221_20050610_1200_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/z/cdo-z7ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050610_1200_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050610_1200_000.single.nc
8. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050516_0600_000.nc, data/nc/200505/narr-a_221_20050516_0600_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/s/cdo-sbieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050516_0600_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050516_0600_000.single.nc
9. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200603/narr-a_221_20060304_0000_000.nc, data/nc/200603/narr-a_221_20060304_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/j/cdo-jz8eex1l
Caused by:
        File not found: /project/joshuaelliott/narr/./data/nc/200603/narr-a_221_20060304_0000_000.nc
10. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050615_0900_000.nc, data/nc/200506/narr-a_221_20050615_0900_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/n/cdo-n8ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050615_0900_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050615_0900_000.single.nc
11. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050531_2100_000.nc, data/nc/200505/narr-a_221_20050531_2100_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/s/cdo-sfieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050531_2100_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050531_2100_000.single.nc
12. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200507/narr-a_221_20050709_0000_000.nc, data/nc/200507/narr-a_221_20050709_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/r/cdo-riieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200507/narr-a_221_20050709_0000_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200507/narr-a_221_20050709_0000_000.single.nc
13. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200603/narr-a_221_20060308_0000_000.nc, data/nc/200603/narr-a_221_20060308_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/9/cdo-919eex1l
Caused by:
        File not found: /project/joshuaelliott/narr/./data/nc/200603/narr-a_221_20060308_0000_000.nc
14. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050616_2100_000.nc, data/nc/200506/narr-a_221_20050616_2100_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/v/cdo-v8ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050616_2100_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050616_2100_000.single.nc
15. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050613_2100_000.nc, data/nc/200506/narr-a_221_20050613_2100_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/e/cdo-e9ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050613_2100_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050613_2100_000.single.nc
16. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050616_0600_000.nc, data/nc/200506/narr-a_221_20050616_0600_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/6/cdo-69ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050616_0600_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050616_0600_000.single.nc
17. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050526_0000_000.nc, data/nc/200505/narr-a_221_20050526_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/l/cdo-leieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050526_0000_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050526_0000_000.single.nc
18. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050609_0300_000.nc, data/nc/200506/narr-a_221_20050609_0300_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/s/cdo-s7ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050609_0300_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050609_0300_000.single.nc
19. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050615_0000_000.nc, data/nc/200506/narr-a_221_20050615_0000_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/t/cdo-t8ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050615_0000_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050615_0000_000.single.nc
20. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050613_0600_000.nc, data/nc/200506/narr-a_221_20050613_0600_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/k/cdo-k9ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050613_0600_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050613_0600_000.single.nc
21. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200505/narr-a_221_20050529_1500_000.nc, data/nc/200505/narr-a_221_20050529_1500_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/r/cdo-rgieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200505/narr-a_221_20050529_1500_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200505/narr-a_221_20050529_1500_000.single.nc
22. Exception in cdo:
    Arguments: [seltimestep,1, data/nc/200506/narr-a_221_20050614_1800_000.nc, data/nc/200506/narr-a_221_20050614_1800_000.single.nc]
    Host: cluster
    Directory: narr-20121205-0003-agtvuf28/jobs/s/cdo-s9ieex1l
    stderr.txt: cdo seltimestep: Open failed on >data/nc/200506/narr-a_221_20050614_1800_000.nc<
Unsupported file type
    stdout.txt:
Caused by:
        The following output files were not created by the application: data/nc/200506/narr-a_221_20050614_1800_000.single.nc
#+END_EXAMPLE

*** TODO Report Org-mode bug of lost line termination

        File not found: /project/joshuaelliott/narr/./data/nc/200509/narr-a_221_20050922_2100_000.nc

#+NAME: filterBadFiles
#+BEGIN_SRC sh :value verbatim output
  ( \
      perl -ne 'print "$1\n" if m#File not found: /project/joshuaelliott/narr/./([^\s]+)$#' swiftErrors.txt && \
      perl -ne 'print "$1\n" if />([^<]+)</' swiftErrors.txt ) | sort  
#+END_SRC


#+RESULTS: filterBadFiles
| data/nc/200403/narr-a_221_20040326_0000_000.nc |
| data/nc/200505/narr-a_221_20050516_0600_000.nc |
| data/nc/200505/narr-a_221_20050523_0000_000.nc |
| data/nc/200505/narr-a_221_20050524_0900_000.nc |
| data/nc/200505/narr-a_221_20050526_0000_000.nc |
| data/nc/200505/narr-a_221_20050527_0300_000.nc |
| data/nc/200505/narr-a_221_20050529_1500_000.nc |
| data/nc/200505/narr-a_221_20050531_2100_000.nc |
| data/nc/200506/narr-a_221_20050609_0300_000.nc |
| data/nc/200506/narr-a_221_20050610_1200_000.nc |
| data/nc/200506/narr-a_221_20050613_0600_000.nc |
| data/nc/200506/narr-a_221_20050613_2100_000.nc |
| data/nc/200506/narr-a_221_20050614_1800_000.nc |
| data/nc/200506/narr-a_221_20050615_0000_000.nc |
| data/nc/200506/narr-a_221_20050615_0900_000.nc |
| data/nc/200506/narr-a_221_20050616_0600_000.nc |
| data/nc/200506/narr-a_221_20050616_2100_000.nc |
| data/nc/200507/narr-a_221_20050709_0000_000.nc |
| data/nc/200509/narr-a_221_20050922_2100_000.nc |
| data/nc/200603/narr-a_221_20060304_0000_000.nc |
| data/nc/200603/narr-a_221_20060308_0000_000.nc |
| data/nc/200605/narr-a_221_20060503_0000_000.nc |


Some of these were due to empty .nc files.

#+NAME: emptyNc
#+BEGIN_SRC sh
find data/nc -size 0 | sort
#+END_SRC

#+RESULTS: emptyNc
| data/nc/200505/narr-a_221_20050516_0600_000.nc |
| data/nc/200505/narr-a_221_20050523_0000_000.nc |
| data/nc/200505/narr-a_221_20050524_0900_000.nc |
| data/nc/200505/narr-a_221_20050526_0000_000.nc |
| data/nc/200505/narr-a_221_20050527_0300_000.nc |
| data/nc/200505/narr-a_221_20050529_1500_000.nc |
| data/nc/200505/narr-a_221_20050531_2100_000.nc |
| data/nc/200506/narr-a_221_20050609_0300_000.nc |
| data/nc/200506/narr-a_221_20050610_1200_000.nc |
| data/nc/200506/narr-a_221_20050613_0600_000.nc |
| data/nc/200506/narr-a_221_20050613_2100_000.nc |
| data/nc/200506/narr-a_221_20050614_1800_000.nc |
| data/nc/200506/narr-a_221_20050615_0000_000.nc |
| data/nc/200506/narr-a_221_20050615_0900_000.nc |
| data/nc/200506/narr-a_221_20050616_0600_000.nc |
| data/nc/200506/narr-a_221_20050616_2100_000.nc |
| data/nc/200507/narr-a_221_20050709_0000_000.nc |


Use this list to write a new list of .grb files to initialize Swift.


#+NAME grbFiles
#+BEGIN_SRC sh :noweb yes
<<filterBadFiles>>  | perl -pe "s/nc/grb/g" | tee grbFilesRedo.txt
#+END_SRC

#+RESULTS:
| data/grb/200403/narr-a_221_20040326_0000_000.grb |
| data/grb/200505/narr-a_221_20050516_0600_000.grb |
| data/grb/200505/narr-a_221_20050523_0000_000.grb |
| data/grb/200505/narr-a_221_20050524_0900_000.grb |
| data/grb/200505/narr-a_221_20050526_0000_000.grb |
| data/grb/200505/narr-a_221_20050527_0300_000.grb |
| data/grb/200505/narr-a_221_20050529_1500_000.grb |
| data/grb/200505/narr-a_221_20050531_2100_000.grb |
| data/grb/200506/narr-a_221_20050609_0300_000.grb |
| data/grb/200506/narr-a_221_20050610_1200_000.grb |
| data/grb/200506/narr-a_221_20050613_0600_000.grb |
| data/grb/200506/narr-a_221_20050613_2100_000.grb |
| data/grb/200506/narr-a_221_20050614_1800_000.grb |
| data/grb/200506/narr-a_221_20050615_0000_000.grb |
| data/grb/200506/narr-a_221_20050615_0900_000.grb |
| data/grb/200506/narr-a_221_20050616_0600_000.grb |
| data/grb/200506/narr-a_221_20050616_2100_000.grb |
| data/grb/200507/narr-a_221_20050709_0000_000.grb |
| data/grb/200509/narr-a_221_20050922_2100_000.grb |
| data/grb/200603/narr-a_221_20060304_0000_000.grb |
| data/grb/200603/narr-a_221_20060308_0000_000.grb |
| data/grb/200605/narr-a_221_20060503_0000_000.grb |


* Fake extra data to finish the time series

This approach was flawed because the metadata within the linked files
will throw off the subsequent steps, i.e. cdo mergetime.

#+BEGIN_SRC R :session *R* :eval no
  
  ## file.symlink(
  ##   to= "data/nc/201212/narr-a_221_20121231_2100_000.1.nc",
  ##   from="data/nc/201112/narr-a_221_20111231_2100_000.1.nc")
  
  fakeThreeHours <-
    seq(
      ISOdate( 2012,12,9, hour= 0),
      ISOdate( 2012,12,31, hour= 21),    
      by= "3 hours")
  
  oneYearEarlier <- {
    foo <- as.POSIXlt( fakeThreeHours)
    foo$year <- foo$year -1
    as.POSIXct( foo)
  }
  
  pathToTimeStep <- function( date, step) {
    sprintf(
      "%s/narr-a_221_%s_000.%d.nc",
      format( date, "%Y%m"),
      format( date, "%Y%m%d_%H%M"),
      step)
  }
  
  linkTo <-
    paste(
      "data/nc",
      c(
        pathToTimeStep( fakeThreeHours, 1),
        pathToTimeStep( fakeThreeHours, 2)),
      sep= "/")
  
  linkFrom <-
    paste(
      "..",
      c(
        pathToTimeStep( oneYearEarlier, 1),
        pathToTimeStep( oneYearEarlier, 2)),
      sep= "/")
  
  ## head( cbind( linkTo, linkFrom))
  ## tail( cbind( linkTo, linkFrom))
  
  file.symlink(
    to=   linkTo,
    from= linkFrom)
  
  
#+END_SRC

#+BEGIN_SRC R :session *R*
  
  fakeThreeHours <-
    seq(
      ISOdate( 2012,12,9, hour= 0),
      ISOdate( 2012,12,31, hour= 21),    
      by= "3 hours")
  
  oneYearEarlier <- {
    foo <- as.POSIXlt( fakeThreeHours)
    foo$year <- foo$year -1
    as.POSIXct( foo)
  }
  
  pathToTimeStep <- function( date, step) {
    sprintf(
      "%s/narr-a_221_%s_000.%d.nc",
      format( date, "%Y%m"),
      format( date, "%Y%m%d_%H%M"),
      step)
  }
  
  outFile <-
    paste(
      "data/nc",
      c(
        pathToTimeStep( fakeThreeHours, 1),
        pathToTimeStep( fakeThreeHours, 2)),
      sep= "/")
  
  inFile <-
    paste(
      "data/nc",
      c(
        pathToTimeStep( oneYearEarlier, 1),
        pathToTimeStep( oneYearEarlier, 2)),
      sep= "/")
  
  
  cat( inFile, file="oneYearEarlier.txt", sep= "\n")
#+END_SRC


* Data validation
  :PROPERTIES:
  :session:  *R*
  :END:

#+BEGIN_SRC R 
  
  library(raster)
  world <- raster()
  res( world) <- 5/60
  
  mooreTwp <- matrix( rev( c( 43.469722, -82.954167)), ncol=2)
  
  cell <- cellFromXY( world, xy= mooreTwp)
  
  date <- ISOdate( 1991, 5, 19, hour= 0)
  
  times <- seq( date, by= "3 hours", length.out= 8)
  
  ## data/grb/199105/narr-a_221_19910519_0000_000.grb
  
  grbFiles <-
    sprintf(
      "data/grb/%s/narr-a_221_%s_000.grb",
      format( times, "%Y%m"),
      format( times, "%Y%m%d_%H%M"))
  
  grbTmp <- stack( grbFiles, bands= c( 288))
  grbApcp <- stack( grbFiles, bands= c( 380))
  grbDswrf <- stack( grbFiles, bands= c( 406))
  
  tmp <- extract( grbTmp, project( mooreTwp, projection( grbTmp)))
  apcp <- extract( grbApcp, project( mooreTwp, projection( grbApcp)))
  dswrf <- extract( grbDswrf, project( mooreTwp, projection( grbDswrf)))
  
  
  extractGrbRecord <- function( cellDateDf, grbDir= "data/grb") {
    with( cellDateDf, {
      xy <- xyFromCell( world, as.integer( cell))
      times <- seq( as.POSIXlt( date), by= "3 hours", length.out= 8)
      grbFiles <-
        sprintf(
          "%s/%s/narr-a_221_%s_000.grb",
          grbDir,
          format( times, "%Y%m"),
          format( times, "%Y%m%d_%H%M"))
      grbTmp <- stack( grbFiles, bands= c( 288))
      grbApcp <- stack( grbFiles, bands= c( 380))
      grbDswrf <- stack( grbFiles, bands= c( 406))
      tmp <- extract( grbTmp, project( xy, projection( grbTmp)))
      apcp <- extract( grbApcp, project( xy, projection( grbApcp)))
      dswrf <- extract( grbDswrf, project( xy, projection( grbDswrf)))
      data.frame(
        cell= cell,
        date= date,
        srad= mean( dswrf) *86400 /1000000,
        tmax= max( tmp),
        tmin= min( tmp),
        rain= sum( apcp))
    })
  }
  
  grbSample <-
    melt( ddply( testCases, .(cell), extractGrbRecord),
         id.vars= c( "cell", "date"))
  
#+END_SRC

** check if 3-hour shift explains solar discrepancy

#+BEGIN_SRC R
  
  date <- ISOdate( 1991, 5, 19, hour= 3)
  times <- seq( date, by= "3 hours", length.out= 8)
  grbFiles <-
    sprintf(
      "data/grb/%s/narr-a_221_%s_000.grb",
      format( times, "%Y%m"),
      format( times, "%Y%m%d_%H%M"))
  grbDswrf <- stack( grbFiles, bands= c( 406))
  dswrf <- extract( grbDswrf, project( mooreTwp, projection( grbDswrf)))
  
  date <- ISOdate( 1991, 5, 18, hour= 21)
  times <- seq( date, by= "3 hours", length.out= 8)
  grbFiles <-
    sprintf(
      "data/grb/%s/narr-a_221_%s_000.grb",
      format( times, "%Y%m"),
      format( times, "%Y%m%d_%H%M"))
  grbDswrf <- stack( grbFiles, bands= c( 406))
  dswrf <- extract( grbDswrf, project( mooreTwp, projection( grbDswrf)))
  mean(dswrf)*86400 /1000000
#+END_SRC


** construct random vectors of dates and cell IDs

#+BEGIN_SRC R
  
  testDates <- {
    start <- as.Date( "1979-01-01")
    end <- as.Date( "2012-12-31")
    start + sample.int( end- start, 10)
  }
                     
  allCells <- readLines( "data/grid_hwsd.txt")
  testCells <- sample( allCells, 10)
  
  testCases <- data.frame(
    cell= testCells,
    date= testDates,
    stringsAsFactors= FALSE)
  
  wthDf <- read.table(
    "data/wth/248/2489215/GENERIC1.WTH",
    skip= 4,
    col.names= c("wthDate", "srad", "tmax", "tmin", "rain"))
  
  
  extractWthRecord <- function( cell, date, wthDir= "data/wth", yearShift= 16) {
    wthFile <- sprintf( "%s/%3.3s/%2$s/GENERIC1.WTH", wthDir, cell)
    wthCols <-  c("wthDay", "srad", "tmax", "tmin", "rain")
    wthDf <- read.table(
      wthFile, skip= 4,
      col.names= wthCols,
      colClasses= c( wthDay= "character"))
    wthDf <-
      within( wthDf, {
        year <- as.character(
          as.integer( substr( wthDay, 1, 2))
          + 1900 + yearShift)
        dayOfYear <- substr( wthDay, 3, 5)
        wthDate <- as.Date(
          paste( year, dayOfYear, sep= ""),
          format= "%Y%j")})
    cbind(
      cell= cell,
      date= date,
      with( wthDf, wthDf[ wthDate == date, wthCols[ -1]]))
  }
  
  extractWthRecordDf <- function( cellDateDf, wthDir= "data/wth", yearShift= 16) {
    with( cellDateDf, extractWthRecord( cell, date, wthDir, yearShift))
  }
  
  wthSample <- melt( ddply( testCases, .(cell), extractWthRecordDf), id.vars= c( "cell", "date"))
  
#+END_SRC

** merge and compare the samples

#+BEGIN_SRC R
  
  mergedSamples <-
    merge(
      grbSample, wthSample,
      by= names( grbSample)[ -4],
      suffixes= c( ".grb", ".wth"))
  
  mergedSamples <-
    transform(
      mergedSamples,
      error= value.grb - value.wth)
  
  mergedSamples <-
    with(
      mergedSamples,
      mergedSamples[ order( variable),])
  
  errorSummary <- ddply(
    mergedSamples,
    .(variable),
    summarize,
    meanError= mean( error),
    sdError= sd( error))
  
  sampleGrbWthErrors <- function( n= 1000) {
    testDates <- {
      start <- as.Date( "1979-01-01")
      end <- as.Date( "2012-12-08")
      start +
        sample.int(
          end- start, n,
          replace= TRUE)}
    testCells <- sample(
      allCells, n)
    testCases <- data.frame(
      cell= testCells,
      date= testDates,
      stringsAsFactors= FALSE)
    grbSample <-
      melt( ddply( testCases, .(cell), extractGrbRecord),
           id.vars= c( "cell", "date"))
    wthSample <-
      melt( ddply( testCases, .(cell), extractWthRecordDf),
           id.vars= c( "cell", "date"))
    mergedSamples <-
      merge(
        grbSample, wthSample,
        by= names( grbSample)[ -4],
        suffixes= c( ".grb", ".wth"))
    mergedSamples <-
      transform(
        mergedSamples,
        error= value.grb - value.wth)
    errorSummary <- ddply(
      mergedSamples,
      .(variable),
      summarize,
      rmse= sqrt( mean( error ^2)),
      mean= mean( value.grb),
      cov= sqrt( mean( error ^2)) / mean( value.grb))
    errorSummary
  }
#+END_SRC



